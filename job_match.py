# -*- coding: utf-8 -*-
"""job_match

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1lnD1TNOaZ8-NGlc7wr-3XrycMhQGDz7i
"""

import streamlit as st
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity
import fitz  # PyMuPDF for PDF
import docx2txt

# Function to extract text from uploaded files
def extract_text(uploaded_file):
    if uploaded_file is not None:
        if uploaded_file.name.endswith(".pdf"):
            text = ""
            pdf = fitz.open(stream=uploaded_file.read(), filetype="pdf")
            for page in pdf:
                text += page.get_text()
            return text

        elif uploaded_file.name.endswith(".docx"):
            return docx2txt.process(uploaded_file)

        elif uploaded_file.name.endswith(".txt"):
            return uploaded_file.read().decode("utf-8")

        else:
            return None
    return None

# Streamlit UI
st.title("ðŸ“„ Resume Screening & Job Match App")
st.write("Upload your Resume and Job Description (PDF/DOCX/TXT) to check the match score.")

# File uploaders
resume_file = st.file_uploader("Upload Resume", type=["pdf", "docx", "txt"])
jd_file = st.file_uploader("Upload Job Description", type=["pdf", "docx", "txt"])

if st.button("Analyze"):
    resume_text = extract_text(resume_file)
    jd_text = extract_text(jd_file)

    if resume_text and jd_text:
        # Calculate similarity score
        vectorizer = TfidfVectorizer()
        vectors = vectorizer.fit_transform([resume_text, jd_text])
        score = cosine_similarity(vectors[0:1], vectors[1:2])[0][0] * 100

        st.subheader("ðŸ“Š Job Fit Score:")
        st.progress(int(score))
        st.write(f"âœ… Match Score: {score:.2f}%")

        # Show extracted text (optional)
        with st.expander("ðŸ“„ Resume Text"):
            st.write(resume_text[:1000] + "..." if len(resume_text) > 1000 else resume_text)
        with st.expander("ðŸ“„ Job Description Text"):
            st.write(jd_text[:1000] + "..." if len(jd_text) > 1000 else jd_text)

    else:
        st.warning("Please upload both Resume and Job Description files.")